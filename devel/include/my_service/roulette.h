// Generated by gencpp from file my_service/roulette.msg
// DO NOT EDIT!


#ifndef MY_SERVICE_MESSAGE_ROULETTE_H
#define MY_SERVICE_MESSAGE_ROULETTE_H

#include <ros/service_traits.h>


#include <my_service/rouletteRequest.h>
#include <my_service/rouletteResponse.h>


namespace my_service
{

struct roulette
{

typedef rouletteRequest Request;
typedef rouletteResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct roulette
} // namespace my_service


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::my_service::roulette > {
  static const char* value()
  {
    return "11369571d31538ac64222d058e8cc357";
  }

  static const char* value(const ::my_service::roulette&) { return value(); }
};

template<>
struct DataType< ::my_service::roulette > {
  static const char* value()
  {
    return "my_service/roulette";
  }

  static const char* value(const ::my_service::roulette&) { return value(); }
};


// service_traits::MD5Sum< ::my_service::rouletteRequest> should match
// service_traits::MD5Sum< ::my_service::roulette >
template<>
struct MD5Sum< ::my_service::rouletteRequest>
{
  static const char* value()
  {
    return MD5Sum< ::my_service::roulette >::value();
  }
  static const char* value(const ::my_service::rouletteRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::my_service::rouletteRequest> should match
// service_traits::DataType< ::my_service::roulette >
template<>
struct DataType< ::my_service::rouletteRequest>
{
  static const char* value()
  {
    return DataType< ::my_service::roulette >::value();
  }
  static const char* value(const ::my_service::rouletteRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::my_service::rouletteResponse> should match
// service_traits::MD5Sum< ::my_service::roulette >
template<>
struct MD5Sum< ::my_service::rouletteResponse>
{
  static const char* value()
  {
    return MD5Sum< ::my_service::roulette >::value();
  }
  static const char* value(const ::my_service::rouletteResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::my_service::rouletteResponse> should match
// service_traits::DataType< ::my_service::roulette >
template<>
struct DataType< ::my_service::rouletteResponse>
{
  static const char* value()
  {
    return DataType< ::my_service::roulette >::value();
  }
  static const char* value(const ::my_service::rouletteResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // MY_SERVICE_MESSAGE_ROULETTE_H
